apiVersion: v1
kind: Secret
metadata:
  name: ssh-key # {"type":"string","x-kustomize":{"setter":{"name":"git-ssh-secret","value":"ssh-key"}}}
  namespace: 'cicd' # {"type":"string","x-kustomize":{"setter":{"name":"namespace","value":"cicd"}}}
  annotations:
    tekton.dev/git-0: github.com # Described below
type: kubernetes.io/ssh-auth
data:
  ssh-privatekey: <base64 encoded> # Copy this value of `cat ~/.ssh/id_rsa | base64`
  known_hosts: <base64 encoded> # Copy this value of `cat ~/.ssh/known_hosts | base64`
---
apiVersion: v1
kind: Secret
metadata:
  name: global-appctlconfig # {"type":"string","x-kustomize":{"setter":{"name":"global-appctl-secret","value":"global-appctlconfig"}}}
  namespace: 'cicd' # {"type":"string","x-kustomize":{"setter":{"name":"namespace","value":"cicd"}}}
type: Opaque
stringData: # Copy the content of $HOME/.appctlconfig (Alpha and Beta) or $HOME/.appctl/.appctlconfig (latest versions).
  .appctlconfig: |-
    <PLACEHOLDER: .appctlconfig CONTENT
---
apiVersion: v1
kind: Secret
metadata:
  name: gcloud-sa-key # {"type":"string","x-kustomize":{"setter":{"name":"gsa-secret","value":"gcloud-sa-key"}}}
  namespace: 'cicd' # {"type":"string","x-kustomize":{"setter":{"name":"namespace","value":"cicd"}}}
type: Opaque
stringData: # Copy the ~/key.json after running `gcloud iam service-accounts keys create ~/key.json  --iam-account ${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com`
  key.json: |-
    <PLACEHOLDER: key.json CONTENT>

# Note: If you are using workload identity, you no longer need to store the json key file to a k8s secret.
# You can run the following commands to make your KSA work as a GSA:
# 
# gcloud beta container clusters create ${CLUSTER} \
#   --release-channel regular \
#   --workload-pool=${PROJECT_ID}.svc.id.goog
#   --cluster-version=1.15.9-gke.22  (Required by tekton v1beta1)
#   --scopes=https://www.googleapis.com/auth/cloud-platform (Required by running "gcloud" SDK)
# 
# gcloud iam service-accounts add-iam-policy-binding \
#   --role roles/iam.workloadIdentityUser \
#   --member "serviceAccount:cluster_project.svc.id.goog[[NAMESPACE]/gcloud-sa-key]" \
#   ${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com
# 
# kubectl annotate serviceaccount \
#   --namespace [NAMESPACE] \
#    gcloud-sa-key \
#    iam.gke.io/gcp-service-account=${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com 
